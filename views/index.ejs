<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QR Generator</title>
    <link rel="stylesheet" href="css/style.css">
</head>

<body>
    <div class="qr_form_wrapper">
        <div id="fire_cracker" class="pyro">
            <div class="before"></div>
            <div class="after"></div>
        </div>
        <div id="qr_img">
            <img id="qrImage" src="" alt="">
        </div>
        <h1>
            <%-homepage%>
        </h1>
        <div class="type_qr">
            <input id="qrUrl" type="text" placeholder="Your QRCode url...">
            <button onclick="getUrl()"><span>Generator QR</span></button>
        </div>
        <div id="qr_send_to_email">
            <input id="qrEmail" type="email" placeholder="Please enter your email">
            <button onclick="getEmail()"><span>Send Email</span></button>
        </div>
        <div class="message"><span id="successMsg"></span></div>
    </div>


</body>
<script>
    var qrBaseData;
    async function getUrl() {
        const url = document.getElementById("qrUrl").value;

        await generateQR(url);
        // console.log(url);
    }
    async function generateQR(url) {
        try {
            const response = await fetch("api/v1/qr", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ url }),
            });
            const result = await response.json();
            console.log("Success:", result);
            qrBaseData = result.data;
            if (result && result.data) {
                document.getElementById("qrImage").src = result.data;
                document.getElementById("qr_img").classList.add("active");
                document.getElementById("qr_send_to_email").classList.add("active");
                document.getElementById("fire_cracker").classList.add("active");
            }
        } catch (err) {
            console.log("Error", err);
        }
    }
    async function isValidGmail(email) {
        // checking the valid gmail format
        const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\.com$/;

        // checking the email matchs the gmail format or not
        return await emailRegex.test(email);

    }
    async function getEmail() {
        const to = document.getElementById("qrEmail").value;
        const qrCode = qrBaseData;

        if (!isValidGmail(to)) {
            // displaying and err message for the invalid gmail address
            document.getElementById("successMsg").textContent = "Please enter the valid email address";
            return;
        }
        await sendEmail({ to, qrCode });
    }
    async function sendEmail(payload) {
        let successEmailMsg;
        try {
            const response = await fetch("api/v1/mail", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(payload),
            });
            const result = response.json();
            console.log("Success:", result);
            successEmailMsg = "QRCode has been send to your email!!! please you can check it out üôÇ";
            document.getElementById("successMsg").textContent = successEmailMsg;
        } catch (err) {
            successEmailMsg = err + " " + "üôÅ";
        }
    }
</script>

</html>